# Copyright (c) 2011 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# These modules come from scripts/master, which must be in the PYTHONPATH.
from master import master_utils
from master import slaves_list

import config

ActiveMaster = config.Master.ChromiumMemory

# Only the production Chromium Buildbot acts as the tree gatekeeper.
TREE_GATE_KEEPER = ActiveMaster.is_production_host

c = BuildmasterConfig = {}
c['change_source'] = []
c['schedulers'] = []
c['builders'] = []
c['status'] = []

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

import master_source_cfg
import master_linux_cfg

master_source_cfg.Update(config, ActiveMaster, c)
master_linux_cfg.Update(config, ActiveMaster, c)

if TREE_GATE_KEEPER:
  import master_gatekeeper_cfg
  master_gatekeeper_cfg.Update(config, ActiveMaster, c)

c['logCompressionLimit'] = False
c['projectName'] = ActiveMaster.project_name
c['projectURL'] = config.Master.project_url
c['buildbotURL'] = 'http://build.chromium.org/p/chromium.memory/'

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumMemory')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(
    c['builders'],
    config.Master.GetBotPassword(),
    missing_recipients=['buildbot@chromium-build-health.appspotmail.com'])
master_utils.VerifySetup(c, slaves)

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'],
    enable_http_status_push=ActiveMaster.is_production_host)
