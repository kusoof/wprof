# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from buildbot.changes import svnpoller
from buildbot.scheduler import Scheduler
from buildbot.scheduler import Triggerable

from master import build_utils
from master import master_config
from master import master_utils
from master import slaves_list
from master.factory import chromium_factory

import config

ActiveMaster = config.Master.ChromiumPyauto

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# Disable compression for the stdio files.
c['logCompressionLimit'] = False

config.DatabaseSetup(c, require_dbconfig=ActiveMaster.is_production_host)

####### CHANGESOURCES

def ChromeTreeFileSplitter(path):
  """split_file for the 'src' project in the trunk."""

  # Exclude .DEPS.git from triggering builds on chrome.
  if path == 'src/.DEPS.git':
    return None

  # List of projects we are interested in. The project names must exactly
  # match paths in the Subversion repository, relative to the 'path' URL
  # argument. build_utils.SplitPath() will use them as branch names to
  # kick off the Schedulers for different projects.
  projects = ['src']
  return build_utils.SplitPath(projects, path)

# Polls config.Master.trunk_url for changes
chromium_rev = 'http://src.chromium.org/viewvc/chrome?view=rev&revision=%s'
trunk_poller = svnpoller.SVNPoller(svnurl=config.Master.trunk_url,
                                   split_file=ChromeTreeFileSplitter,
                                   pollinterval=10,
                                   revlinktmpl=chromium_rev)

c['change_source'] = [trunk_poller]


####### SCHEDULERS

## configure the Schedulers

# Main scheduler for all changes in trunk.
s_chromium = Scheduler(name='chromium',
                       branch='src',
                       treeStableTimer=60,
                       builderNames=['Win7',
                                     'Mac 10.6',
                                     'Linux (deb)',
                                     'Linux (perf0)',
                                     'Linux (perf1)',
                                     'Linux (perf2)',
                                     'Linux (perf3)',
                                     'Linux (perf4)',
                                    ])

# TODO(nirnimesh): switch this to a 10.7 bot.
# s_chromium_mac_trigger = Triggerable('mac_trigger',
#                                      ['Mac 10.5'])

s_chromium_win_trigger = Triggerable('win_trigger',
                                     ['Win XP', 'Win Vista'])


c['schedulers'] = [s_chromium,
                   s_chromium_win_trigger,]

####### BUILDERS

builders = []

# ----------------------------------------------------------------------------
# FACTORIES

m_win = chromium_factory.ChromiumFactory('src/build', 'win32')
m_linux = chromium_factory.ChromiumFactory('src/build', 'linux2')
m_mac = chromium_factory.ChromiumFactory('src/build', 'darwin')

# Some shortcut to simplify the code below.
F_WIN = m_win.ChromiumFactory
F_LINUX = m_linux.ChromiumFactory
F_MAC = m_mac.ChromiumFactory

chromium_win_archive = master_config.GetArchiveUrl('ChromiumPyauto',
                                                   'Win7',
                                                   'pyauto_win7',
                                                   'win32')
chromium_mac_archive = master_config.GetArchiveUrl('ChromiumPyauto',
                                                   'Mac 10.6',
                                                   'pyauto_mac_10_6',
                                                   'mac')

f_linux_deb = F_LINUX(target='Release',
                      options=['chromium_builder_qa'],
                      tests=['pyauto_functional_tests',
                             'chromedriver_tests',
                             'webdriver_tests'],
                      factory_properties={'use_xvfb_on_linux': True})

f_win7 = F_WIN(slave_type='Builder',
               project='all.sln;chromium_builder_qa',
               target='Release',
               tests=['pyauto_functional_tests',
                      'chromedriver_tests',
                      'webdriver_tests'],
               factory_properties={'trigger': 'win_trigger'})

f_win_tester = F_WIN(target='Release',
                     slave_type='Tester',
                     build_url=chromium_win_archive,
                     tests=['pyauto_functional_tests',
                            'chromedriver_tests',
                            'webdriver_tests'])

f_mac_10_6 = F_MAC(slave_type='Builder',
                   target='Release',
                   options=['--', '-project', 'all.xcodeproj',
                            '-target', 'chromium_builder_qa'],
                   tests=['pyauto_functional_tests',
                          'chromedriver_tests',
                          'webdriver_tests'],
                   # TODO(nirnimesh): Put back when 10.7 bot is setup.
                   # factory_properties={'trigger': 'mac_trigger'}
                  )

f_linux_perf0 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['chrome_endure_control_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf1 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['chrome_endure_gmail_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf2 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['chrome_endure_docs_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf3 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['chrome_endure_plus_tests'],
                        factory_properties={'use_xvfb_on_linux': True})

f_linux_perf4 = F_LINUX(target='Release',
                        options=['chromium_builder_qa'],
                        tests=['chrome_endure_indexeddb_tests'],
                        factory_properties={'use_xvfb_on_linux': True})


# ----------------------------------------------------------------------------
# BUILDER DEFINITIONS

b_win_xp = {'name': 'Win XP', 'factory': f_win_tester}
b_win_vista = {'name': 'Win Vista', 'factory': f_win_tester}
b_win7 = {'name': 'Win7',
          'factory': f_win7,
          'builddir': 'pyauto_win7'}
b_linux_deb = {'name': 'Linux (deb)', 'factory': f_linux_deb}
b_mac10_6 = {'name': 'Mac 10.6',
             'factory': f_mac_10_6,
             'builddir': 'pyauto_mac_10_6'}
b_linux_perf0 = {'name': 'Linux (perf0)', 'factory': f_linux_perf0}
b_linux_perf1 = {'name': 'Linux (perf1)', 'factory': f_linux_perf1}
b_linux_perf2 = {'name': 'Linux (perf2)', 'factory': f_linux_perf2}
b_linux_perf3 = {'name': 'Linux (perf3)', 'factory': f_linux_perf3}
b_linux_perf4 = {'name': 'Linux (perf4)', 'factory': f_linux_perf4}


c['builders'] = [
  b_win_xp,
  b_win_vista,
  b_win7,
  b_mac10_6,
  b_linux_deb,
  b_linux_perf0,
  b_linux_perf1,
  b_linux_perf2,
  b_linux_perf3,
  b_linux_perf4,
]

# Associate the slaves to the manual builders. The configuration is in
# slaves.cfg.
slaves = slaves_list.SlavesList('slaves.cfg', 'ChromiumPyauto')
for builder in c['builders']:
  builder['slavenames'] = slaves.GetSlavesName(builder=builder['name'])

####### BUILDSLAVES

# The 'slaves' list defines the set of allowable buildslaves. List all the
# slaves registered to a builder. Remove dupes.
c['slaves'] = master_utils.AutoSetupSlaves(c['builders'],
                                           config.Master.GetBotPassword())

# Make sure everything works together.
master_utils.VerifySetup(c, slaves)

####### STATUS TARGETS

# Adds common status and tools to this master.
master_utils.AutoSetupMaster(c, ActiveMaster,
    public_html='../master.chromium/public_html',
    templates=['../master.chromium/templates'],
    enable_http_status_push=ActiveMaster.is_production_host)

####### PROJECT IDENTITY

# Buildbot master url:
c['buildbotURL'] = 'http://build.chromium.org/buildbot/pyauto/'
