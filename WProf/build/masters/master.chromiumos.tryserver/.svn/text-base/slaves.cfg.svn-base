# -*- python -*-
# ex: set syntax=python:

# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# See master.experimental/slaves.cfg for documentation.

from common import chromium_utils


def _GenerateBuilder(format, ids):
  """Return a list of builder names given a format and id list.

  Arguments:
    format: Format of the name, that takes one integer id parameter.
    ids: A list of id elements.  Individual elements can be a standalone
         integer or a tuple.  Tuples are treated as inclusive ranges and
         expanded.  A tuple of (1,3) would be expanded as [1, 2, 3].
  """
  builder_list = []
  for id_element in ids:
     if isinstance(id_element, tuple):
       builder_list.extend([format % id for id in
                            xrange(id_element[0], id_element[1] + 1)])
     else:
       builder_list.append(format % id_element)

  return builder_list


def _GenerateBaremetal(builder_ids):
  """Return a list of baremetal builder names (buildx-m2) given a list of id's.

  Arguments:
    id: See _GenerateBuilder() for id list format.
  """
  return _GenerateBuilder('build%i-m2', builder_ids)


def _GenerateVM(builder_ids):
  """Return a list of VM builder names (vmx-m2) given a list of id's.

  Arguments:
    id: See _GenerateBuilder() for id list format.
  """
  return _GenerateBuilder('vm%i-m2', builder_ids)


def _AllocateSlaves():
  configs = chromium_utils.GetCBuildbotConfigs()
  all_builders = [cfg['name'] for cfg in configs]
  vmtest_hostnames = _GenerateBaremetal(
      [16, 17, 20, 25, 35, 41, 44, 49, 58, 59, (84, 91)])
  slave_list = []
  for host in vmtest_hostnames:
    new_slave = {
        'master': 'ChromiumOSTryServer',
        'builder': all_builders,
        'hostname': host,
        'os': 'linux',
    }
    slave_list.append(new_slave)

  return slave_list


slaves = _AllocateSlaves()
